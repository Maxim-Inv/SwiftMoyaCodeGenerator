//
//  {{{apiName}}}API.swift
//  
//  Generated using MoyaPaw Export https://github.com/narlei/SwiftMoyaCodeGenerator.git

import Moya

{{{alll}}}

public enum {{{apiName}}}API {
    case {{{requestName}}}{{#queryParamsType}}({{{queryParamsType}}}){{/queryParamsType}}
}

extension {{{apiName}}}API: TargetType {

    public var baseURL: URL { return URL(string: "{{{baseURL}}}")! }

    public var path: String {
        switch self {
        case .{{{requestName}}}:
            return "{{{pathExtension}}}"
        }
    }

    public var method: Moya.Method {
        switch self {
        case .{{{requestName}}}:
            return .{{{requestMethod}}}
        }
    }

    public var task: Task {
        switch self {
        {{#queryParams}}
        case .{{{requestName}}}({{{queryParams}}}):
            return {{#queryDictString}}.requestParameters(parameters: [{{{queryDictString}}}], encoding: URLEncoding.default){{/queryDictString}}
        {{/queryParams}}
        {{#jsonBodyParams}}
        case .{{{requestName}}}({{{jsonBodyParams}}}):
            return {{#jsonBodyDictString}}.requestParameters(parameters: [{{{jsonBodyDictString}}}], encoding: URLEncoding.default){{/jsonBodyDictString}}
        {{/jsonBodyParams}}
        {{^queryParams}}
        {{^jsonBodyParams}}
        case .{{{requestName}}}:
            return .requestPlain
        {{/jsonBodyParams}}
        {{/queryParams}}
        }
    }

    public var headers: [String: String]? {
        return [{{#headers}}{{{headers}}}{{/headers}}]
    }

    public var sampleData: Data {
        switch self {
        case .{{{requestName}}}:
            return "{}".data(using: String.Encoding.utf8)!
        }
    }
}

